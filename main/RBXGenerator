
local HTTP = game:GetService("HttpService")
local module = {
	BreakScriptOnException = false,
	HandleExceptions = true,
	DebugMode = false,
	DefaultWordLength = 5,
	DefailtWordAmount = 1,
}
function HttpGETRequest(url)
	return HTTP:JSONDecode(game:HttpGet(url,true))
end


function module:GetRandomWordV1(probs)
	if module.DebugMode == true then
		print("Reading properties...")
	end
	if probs.length ~= nil then
		local s,m = pcall(function()
			if module.DebugMode == true then
				print("Making request")
			end
			local response = HttpGETRequest('https://random-word-api.herokuapp.com/word?number=1&length='..tostring(probs.length))
			if response then
				if module.DebugMode == true then
					print("Response successful..")

				end
				return response
			else
				if module.DebugMode == true then
					print("Response failed returned null")

				end
				if module.BreakScriptOnException == true then
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					return
				else
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
				end
			end
		end)
	end
end
function module:GetRandomWord(probs)
    local res
	if module.DebugMode == true then
		print("Reading properties...")
	end
	if probs.length ~= nil then
		local s,m = pcall(function()
			if module.DebugMode == true then
				print("Making request")
			end
			local response = HttpGETRequest('https://random-word-api.herokuapp.com/word?number=1&length='..tostring(probs.length))
			if response then
				if module.DebugMode == true then
					print("Response successful.. writing results")

				end
				res = response
			else
				if module.DebugMode == true then
					print("Response failed returned null")

				end
				if module.BreakScriptOnException == true then
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					error("HttpGet Failed to create request")
				else
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					res = response
					return response
				end
			end
			res = response
            return response
		end)
		print(s,m[0])
		if m and s == false then

			if module.DebugMode == true then
				print("Response failed returned null")

			end
			if module.BreakScriptOnException == true then
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				error("Process returned exception: "..tostring(m))
			else
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				return res
			end
		end
	end
    return res
end
function module:GetRandomWords(probs)
    local res
	if module.DebugMode == true then
		print("Reading properties...")
	end
	if probs.length ~= nil and probs.amount ~= nil then
		local s,m = pcall(function()
			if module.DebugMode == true then
				print("Making request")
			end
			local response = HttpGETRequest('https://random-word-api.herokuapp.com/word?number='..tostring(probs.amount)..'&length='..tostring(probs.length))
			if response then
				if module.DebugMode == true then
					print("Response successful..")

				end
				return response
			else
				if module.DebugMode == true then
					print("Response failed returned null")

				end
				if module.BreakScriptOnException == true then
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					error("HttpGet Failed to create request")
				else
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					return res
				end
			end
		end)
		if m and s == false then

			if module.DebugMode == true then
				print("Response failed returned null")

			end
			if module.BreakScriptOnException == true then
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				error("Process returned exception: "..tostring(m))
			else
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				return res
			end
		end
	elseif probs.length ~= nil and probs.amount == nil then
		local s,m = pcall(function()
			if module.DebugMode == true then
				print("Making request")
			end
			local response = HttpGETRequest('https://random-word-api.herokuapp.com/word?number='..tostring(module.DefailtWordAmount)'&length='..tostring(probs.length))
			if response then
				if module.DebugMode == true then
					print("Response successful.. writing to res")

				end
				res = response
			else
				if module.DebugMode == true then
					print("Response failed returned null")

				end
				if module.BreakScriptOnException == true then
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					error("HttpGet Failed to create request")
				else
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					return res
				end
			end
		end)
		if m and s == false then

			if module.DebugMode == true then
				print("Response failed returned null")

			end
			if module.BreakScriptOnException == true then
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				error("Process returned exception: "..tostring(m))
			else
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				return res
			end
		end
	elseif probs.length == nil and probs.amount ~= nil then
		local s,m = pcall(function()
			if module.DebugMode == true then
				print("Making request")
			end
			local response = HttpGETRequest('https://random-word-api.herokuapp.com/word?number='..tostring(probs.amount)..'&length='..tostring(module.DefaultWordLength))
			if response then
				if module.DebugMode == true then
					print("Response successful..")

				end
				res = response
			else
				if module.DebugMode == true then
					print("Response failed returned null")

				end
				if module.BreakScriptOnException == true then
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					error("HttpGet Failed to create request")
				else
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					return res
				end
			end
		end)
		if m and s == false then

			if module.DebugMode == true then
				print("Response failed returned null")

			end
			if module.BreakScriptOnException == true then
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				error("Process returned exception: "..tostring(m))
			else
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				return res
			end
		end
	else
		local s,m = pcall(function()
			if module.DebugMode == true then
				print("Making request")
			end
			local response = HttpGETRequest('https://random-word-api.herokuapp.com/word?number='..tostring(module.DefailtWordAmount)..'&length='..tostring(module.DefaultWordLength))
			if response then
				if module.DebugMode == true then
					print("Response successful..")

				end
				res = response
			else
				if module.DebugMode == true then
					print("Response failed returned null")

				end
				if module.BreakScriptOnException == true then
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					error("HttpGet Failed to create request")
				else
					if module.DebugMode == true then
						print("Function ended with code -1..")

					end
					return res
				end
			end
		end)
		if m and s == false then

			if module.DebugMode == true then
				print("Response failed returned null")

			end
			if module.BreakScriptOnException == true then
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				error("Process returned exception: "..tostring(m))
			else
				if module.DebugMode == true then
					print("Function ended with exception "..tostring(m))

				end
				return res
			end
		end
	end
    return res
end
return module
--[[
local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/x203f/RBXRandomWordGenerator/main/main/RBXGenerator",true))()
local probs = {
    ["length"] = 5,
}
module.DebugMode = true
local wordlol = module:GetRandomWord(probs)
for i,word in pairs(wordlol)
    print(word)
end





local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/x203f/RBXRandomWordGenerator/main/main/RBXGenerator",true))()
local probs = {
    ["length"] = 5,
    ["amount"] = 10,
}
module.DebugMode = true
local wordlol = module:GetRandomWords(probs)
for i,word in pairs(wordlol)
    print(word)
end




--]]